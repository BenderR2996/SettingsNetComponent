// задание:

Необходимо разработать компонент, позволяющий централизованно хранить настройки различных приложений.
Доступ к настройкам должен обеспечиваться в пределах одной сети.
Структура настроек определяется каждым конкретным приложением и компоненту не известна.

// вариант решения:

Необходимо разработать компонент (*.dll), позволяющий централизованно (БД + серверное приложение)
хранить настройки различных приложений.
Доступ к настройкам должен обеспечиваться в пределах одной сети (WCF).
Структура настроек определяется каждым конкретным приложением и компоненту не известна (JSON).


приложение-сервер хранит все настройки приложений в БД
идентификация приложений по MAC-адресу машины и названию приложения
все настройки хранятся в JSON формате

// Замечание...
Идентификация приложений по названию и mac-адресу может повлечь за собой сбой работы приложения, в случае замены сетевой карты компьютера.
Можно решить эту проблему заменив идентификатор приложения на GUID, который будет храниться в локальном файле, рядом с программой (если, нет жестких ограничений, на размещение такого файла)
